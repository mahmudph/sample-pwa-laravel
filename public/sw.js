try{self["workbox:core:6.5.3"]&&_()}catch{}const pe={"invalid-value":({paramName:s,validValueDescription:e,value:t})=>{if(!s||!e)throw new Error("Unexpected input to 'invalid-value' error.");return`The '${s}' parameter was given a value with an unexpected value. ${e} Received a value of ${JSON.stringify(t)}.`},"not-an-array":({moduleName:s,className:e,funcName:t,paramName:r})=>{if(!s||!e||!t||!r)throw new Error("Unexpected input to 'not-an-array' error.");return`The parameter '${r}' passed into '${s}.${e}.${t}()' must be an array.`},"incorrect-type":({expectedType:s,paramName:e,moduleName:t,className:r,funcName:a})=>{if(!s||!e||!t||!a)throw new Error("Unexpected input to 'incorrect-type' error.");const n=r?`${r}.`:"";return`The parameter '${e}' passed into '${t}.${n}${a}()' must be of type ${s}.`},"incorrect-class":({expectedClassName:s,paramName:e,moduleName:t,className:r,funcName:a,isReturnValueProblem:n})=>{if(!s||!t||!a)throw new Error("Unexpected input to 'incorrect-class' error.");const o=r?`${r}.`:"";return n?`The return value from '${t}.${o}${a}()' must be an instance of class ${s}.`:`The parameter '${e}' passed into '${t}.${o}${a}()' must be an instance of class ${s}.`},"missing-a-method":({expectedMethod:s,paramName:e,moduleName:t,className:r,funcName:a})=>{if(!s||!e||!t||!r||!a)throw new Error("Unexpected input to 'missing-a-method' error.");return`${t}.${r}.${a}() expected the '${e}' parameter to expose a '${s}' method.`},"add-to-cache-list-unexpected-type":({entry:s})=>`An unexpected entry was passed to 'workbox-precaching.PrecacheController.addToCacheList()' The entry '${JSON.stringify(s)}' isn't supported. You must supply an array of strings with one or more characters, objects with a url property or Request objects.`,"add-to-cache-list-conflicting-entries":({firstEntry:s,secondEntry:e})=>{if(!s||!e)throw new Error("Unexpected input to 'add-to-cache-list-duplicate-entries' error.");return`Two of the entries passed to 'workbox-precaching.PrecacheController.addToCacheList()' had the URL ${s} but different revision details. Workbox is unable to cache and version the asset correctly. Please remove one of the entries.`},"plugin-error-request-will-fetch":({thrownErrorMessage:s})=>{if(!s)throw new Error("Unexpected input to 'plugin-error-request-will-fetch', error.");return`An error was thrown by a plugins 'requestWillFetch()' method. The thrown error message was: '${s}'.`},"invalid-cache-name":({cacheNameId:s,value:e})=>{if(!s)throw new Error("Expected a 'cacheNameId' for error 'invalid-cache-name'");return`You must provide a name containing at least one character for setCacheDetails({${s}: '...'}). Received a value of '${JSON.stringify(e)}'`},"unregister-route-but-not-found-with-method":({method:s})=>{if(!s)throw new Error("Unexpected input to 'unregister-route-but-not-found-with-method' error.");return`The route you're trying to unregister was not  previously registered for the method type '${s}'.`},"unregister-route-route-not-registered":()=>"The route you're trying to unregister was not previously registered.","queue-replay-failed":({name:s})=>`Replaying the background sync queue '${s}' failed.`,"duplicate-queue-name":({name:s})=>`The Queue name '${s}' is already being used. All instances of backgroundSync.Queue must be given unique names.`,"expired-test-without-max-age":({methodName:s,paramName:e})=>`The '${s}()' method can only be used when the '${e}' is used in the constructor.`,"unsupported-route-type":({moduleName:s,className:e,funcName:t,paramName:r})=>`The supplied '${r}' parameter was an unsupported type. Please check the docs for ${s}.${e}.${t} for valid input types.`,"not-array-of-class":({value:s,expectedClass:e,moduleName:t,className:r,funcName:a,paramName:n})=>`The supplied '${n}' parameter must be an array of '${e}' objects. Received '${JSON.stringify(s)},'. Please check the call to ${t}.${r}.${a}() to fix the issue.`,"max-entries-or-age-required":({moduleName:s,className:e,funcName:t})=>`You must define either config.maxEntries or config.maxAgeSecondsin ${s}.${e}.${t}`,"statuses-or-headers-required":({moduleName:s,className:e,funcName:t})=>`You must define either config.statuses or config.headersin ${s}.${e}.${t}`,"invalid-string":({moduleName:s,funcName:e,paramName:t})=>{if(!t||!s||!e)throw new Error("Unexpected input to 'invalid-string' error.");return`When using strings, the '${t}' parameter must start with 'http' (for cross-origin matches) or '/' (for same-origin matches). Please see the docs for ${s}.${e}() for more info.`},"channel-name-required":()=>"You must provide a channelName to construct a BroadcastCacheUpdate instance.","invalid-responses-are-same-args":()=>"The arguments passed into responsesAreSame() appear to be invalid. Please ensure valid Responses are used.","expire-custom-caches-only":()=>"You must provide a 'cacheName' property when using the expiration plugin with a runtime caching strategy.","unit-must-be-bytes":({normalizedRangeHeader:s})=>{if(!s)throw new Error("Unexpected input to 'unit-must-be-bytes' error.");return`The 'unit' portion of the Range header must be set to 'bytes'. The Range header provided was "${s}"`},"single-range-only":({normalizedRangeHeader:s})=>{if(!s)throw new Error("Unexpected input to 'single-range-only' error.");return`Multiple ranges are not supported. Please use a  single start value, and optional end value. The Range header provided was "${s}"`},"invalid-range-values":({normalizedRangeHeader:s})=>{if(!s)throw new Error("Unexpected input to 'invalid-range-values' error.");return`The Range header is missing both start and end values. At least one of those values is needed. The Range header provided was "${s}"`},"no-range-header":()=>"No Range header was found in the Request provided.","range-not-satisfiable":({size:s,start:e,end:t})=>`The start (${e}) and end (${t}) values in the Range are not satisfiable by the cached response, which is ${s} bytes.`,"attempt-to-cache-non-get-request":({url:s,method:e})=>`Unable to cache '${s}' because it is a '${e}' request and only 'GET' requests can be cached.`,"cache-put-with-no-response":({url:s})=>`There was an attempt to cache '${s}' but the response was not defined.`,"no-response":({url:s,error:e})=>{let t=`The strategy could not generate a response for '${s}'.`;return e&&(t+=` The underlying error is ${e}.`),t},"bad-precaching-response":({url:s,status:e})=>`The precaching request for '${s}' failed`+(e?` with an HTTP status of ${e}.`:"."),"non-precached-url":({url:s})=>`createHandlerBoundToURL('${s}') was called, but that URL is not precached. Please pass in a URL that is precached instead.`,"add-to-cache-list-conflicting-integrities":({url:s})=>`Two of the entries passed to 'workbox-precaching.PrecacheController.addToCacheList()' had the URL ${s} with different integrity values. Please remove one of them.`,"missing-precache-entry":({cacheName:s,url:e})=>`Unable to find a precached response in ${s} for ${e}.`,"cross-origin-copy-response":({origin:s})=>`workbox-core.copyResponse() can only be used with same-origin responses. It was passed a response with origin ${s}.`,"opaque-streams-source":({type:s})=>{const e=`One of the workbox-streams sources resulted in an '${s}' response.`;return s==="opaqueredirect"?`${e} Please do not use a navigation request that results in a redirect as a source.`:`${e} Please ensure your sources are CORS-enabled.`}},me=(s,e={})=>{const t=pe[s];if(!t)throw new Error(`Unable to find message for code '${s}'.`);return t(e)},ge=me;class l extends Error{constructor(e,t){const r=ge(e,t);super(r),this.name=e,this.details=t}}const we=(s,e)=>{if(!Array.isArray(s))throw new l("not-an-array",e)},ye=(s,e,t)=>{if(typeof s[e]!=="function")throw t.expectedMethod=e,new l("missing-a-method",t)},be=(s,e,t)=>{if(typeof s!==e)throw t.expectedType=e,new l("incorrect-type",t)},_e=(s,e,t)=>{if(!(s instanceof e))throw t.expectedClassName=e.name,new l("incorrect-class",t)},Re=(s,e,t)=>{if(!e.includes(s))throw t.validValueDescription=`Valid values are ${JSON.stringify(e)}.`,new l("invalid-value",t)},Ne=(s,e,t)=>{const r=new l("not-array-of-class",t);if(!Array.isArray(s))throw r;for(const a of s)if(!(a instanceof e))throw r},h={hasMethod:ye,isArray:we,isInstance:_e,isOneOf:Re,isType:be,isArrayOfClass:Ne},i=(()=>{"__WB_DISABLE_DEV_LOGS"in self||(self.__WB_DISABLE_DEV_LOGS=!1);let s=!1;const e={debug:"#7f8c8d",log:"#2ecc71",warn:"#f39c12",error:"#c0392b",groupCollapsed:"#3498db",groupEnd:null},t=function(n,o){if(self.__WB_DISABLE_DEV_LOGS)return;if(n==="groupCollapsed"&&/^((?!chrome|android).)*safari/i.test(navigator.userAgent)){console[n](...o);return}const c=[`background: ${e[n]}`,"border-radius: 0.5em","color: white","font-weight: bold","padding: 2px 0.5em"],u=s?[]:["%cworkbox",c.join(";")];console[n](...u,...o),n==="groupCollapsed"&&(s=!0),n==="groupEnd"&&(s=!1)},r={},a=Object.keys(e);for(const n of a){const o=n;r[o]=(...c)=>{t(o,c)}}return r})();try{self["workbox:routing:6.5.3"]&&_()}catch{}const ae="GET",xe=["DELETE","GET","HEAD","PATCH","POST","PUT"],S=s=>s&&typeof s=="object"?(h.hasMethod(s,"handle",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"handler"}),s):(h.isType(s,"function",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"handler"}),{handle:s});class ${constructor(e,t,r=ae){h.isType(e,"function",{moduleName:"workbox-routing",className:"Route",funcName:"constructor",paramName:"match"}),r&&h.isOneOf(r,xe,{paramName:"method"}),this.handler=S(t),this.match=e,this.method=r}setCatchHandler(e){this.catchHandler=S(e)}}class Ee extends ${constructor(e,t,r){h.isInstance(e,RegExp,{moduleName:"workbox-routing",className:"RegExpRoute",funcName:"constructor",paramName:"pattern"});const a=({url:n})=>{const o=e.exec(n.href);if(o){if(n.origin!==location.origin&&o.index!==0){i.debug(`The regular expression '${e.toString()}' only partially matched against the cross-origin URL '${n.toString()}'. RegExpRoute's will only handle cross-origin requests if they match the entire URL.`);return}return o.slice(1)}};super(a,t,r)}}const d=s=>new URL(String(s),location.href).href.replace(new RegExp(`^${location.origin}`),"");class Ce{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,r=this.handleRequest({request:t,event:e});r&&e.respondWith(r)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&e.data.type==="CACHE_URLS"){const{payload:t}=e.data;i.debug("Caching URLs from the window",t.urlsToCache);const r=Promise.all(t.urlsToCache.map(a=>{typeof a=="string"&&(a=[a]);const n=new Request(...a);return this.handleRequest({request:n,event:e})}));e.waitUntil(r),e.ports&&e.ports[0]&&r.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){h.isInstance(e,Request,{moduleName:"workbox-routing",className:"Router",funcName:"handleRequest",paramName:"options.request"});const r=new URL(e.url,location.href);if(!r.protocol.startsWith("http")){i.debug("Workbox Router only supports URLs that start with 'http'.");return}const a=r.origin===location.origin,{params:n,route:o}=this.findMatchingRoute({event:t,request:e,sameOrigin:a,url:r});let c=o&&o.handler;const u=[];c&&(u.push(["Found a route to handle this request:",o]),n&&u.push(["Passing the following params to the route's handler:",n]));const f=e.method;if(!c&&this._defaultHandlerMap.has(f)&&(u.push(`Failed to find a matching route. Falling back to the default handler for ${f}.`),c=this._defaultHandlerMap.get(f)),!c){i.debug(`No route found for: ${d(r)}`);return}i.groupCollapsed(`Router is responding to: ${d(r)}`),u.forEach(m=>{Array.isArray(m)?i.log(...m):i.log(m)}),i.groupEnd();let b;try{b=c.handle({url:r,request:e,event:t,params:n})}catch(m){b=Promise.reject(m)}const p=o&&o.catchHandler;return b instanceof Promise&&(this._catchHandler||p)&&(b=b.catch(async m=>{if(p){i.groupCollapsed(`Error thrown when responding to:  ${d(r)}. Falling back to route's Catch Handler.`),i.error("Error thrown by:",o),i.error(m),i.groupEnd();try{return await p.handle({url:r,request:e,event:t,params:n})}catch(V){V instanceof Error&&(m=V)}}if(this._catchHandler)return i.groupCollapsed(`Error thrown when responding to:  ${d(r)}. Falling back to global Catch Handler.`),i.error("Error thrown by:",o),i.error(m),i.groupEnd(),this._catchHandler.handle({url:r,request:e,event:t});throw m})),b}findMatchingRoute({url:e,sameOrigin:t,request:r,event:a}){const n=this._routes.get(r.method)||[];for(const o of n){let c;const u=o.match({url:e,sameOrigin:t,request:r,event:a});if(u)return u instanceof Promise&&i.warn(`While routing ${d(e)}, an async matchCallback function was used. Please convert the following route to use a synchronous matchCallback function:`,o),c=u,(Array.isArray(c)&&c.length===0||u.constructor===Object&&Object.keys(u).length===0||typeof u=="boolean")&&(c=void 0),{route:o,params:c}}return{}}setDefaultHandler(e,t=ae){this._defaultHandlerMap.set(t,S(e))}setCatchHandler(e){this._catchHandler=S(e)}registerRoute(e){h.isType(e,"object",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),h.hasMethod(e,"match",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),h.isType(e.handler,"object",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route"}),h.hasMethod(e.handler,"handle",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route.handler"}),h.isType(e.method,"string",{moduleName:"workbox-routing",className:"Router",funcName:"registerRoute",paramName:"route.method"}),this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new l("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(t>-1)this._routes.get(e.method).splice(t,1);else throw new l("unregister-route-route-not-registered")}}let E;const j=()=>(E||(E=new Ce,E.addFetchListener(),E.addCacheListener()),E);function x(s,e,t){let r;if(typeof s=="string"){const n=new URL(s,location.href);{if(!(s.startsWith("/")||s.startsWith("http")))throw new l("invalid-string",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});const c=s.startsWith("http")?n.pathname:s,u="[*:?+]";new RegExp(`${u}`).exec(c)&&i.debug(`The '$capture' parameter contains an Express-style wildcard character (${u}). Strings are now always interpreted as exact matches; use a RegExp for partial or wildcard matches.`)}const o=({url:c})=>(c.pathname===n.pathname&&c.origin!==n.origin&&i.debug(`${s} only partially matches the cross-origin URL ${c.toString()}. This route will only handle cross-origin requests if they match the entire URL.`),c.href===n.href);r=new $(o,e,t)}else if(s instanceof RegExp)r=new Ee(s,e,t);else if(typeof s=="function")r=new $(s,e,t);else if(s instanceof $)r=s;else throw new l("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});return j().registerRoute(r),r}function ke(s){j().setCatchHandler(s)}function Te(s){j().setDefaultHandler(s)}const w={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:typeof registration<"u"?registration.scope:""},P=s=>[w.prefix,s,w.suffix].filter(e=>e&&e.length>0).join("-"),$e=s=>{for(const e of Object.keys(w))s(e)},v={updateDetails:s=>{$e(e=>{typeof s[e]=="string"&&(w[e]=s[e])})},getGoogleAnalyticsName:s=>s||P(w.googleAnalytics),getPrecacheName:s=>s||P(w.precache),getPrefix:()=>w.prefix,getRuntimeName:s=>s||P(w.runtime),getSuffix:()=>w.suffix};function G(s,e){const t=new URL(s);for(const r of e)t.searchParams.delete(r);return t.href}async function qe(s,e,t,r){const a=G(e.url,t);if(e.url===a)return s.match(e,r);const n=Object.assign(Object.assign({},r),{ignoreSearch:!0}),o=await s.keys(e,n);for(const c of o){const u=G(c.url,t);if(a===u)return s.match(c,r)}}class De{constructor(){this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}}const B=new Set;async function Se(){i.log(`About to run ${B.size} callbacks to clean up caches.`);for(const s of B)await s(),i.log(s,"is complete.");i.log("Finished running callbacks.")}function ne(s){return new Promise(e=>setTimeout(e,s))}try{self["workbox:strategies:6.5.3"]&&_()}catch{}function D(s){return typeof s=="string"?new Request(s):s}class ve{constructor(e,t){this._cacheKeys={},h.isInstance(t.event,ExtendableEvent,{moduleName:"workbox-strategies",className:"StrategyHandler",funcName:"constructor",paramName:"options.event"}),Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new De,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const r of this._plugins)this._pluginStateMap.set(r,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:t}=this;let r=D(e);if(r.mode==="navigate"&&t instanceof FetchEvent&&t.preloadResponse){const o=await t.preloadResponse;if(o)return i.log(`Using a preloaded navigation response for '${d(r.url)}'`),o}const a=this.hasCallback("fetchDidFail")?r.clone():null;try{for(const o of this.iterateCallbacks("requestWillFetch"))r=await o({request:r.clone(),event:t})}catch(o){if(o instanceof Error)throw new l("plugin-error-request-will-fetch",{thrownErrorMessage:o.message})}const n=r.clone();try{let o;o=await fetch(r,r.mode==="navigate"?void 0:this._strategy.fetchOptions),i.debug(`Network request for '${d(r.url)}' returned a response with status '${o.status}'.`);for(const c of this.iterateCallbacks("fetchDidSucceed"))o=await c({event:t,request:n,response:o});return o}catch(o){throw i.log(`Network request for '${d(r.url)}' threw an error.`,o),a&&await this.runCallbacks("fetchDidFail",{error:o,event:t,originalRequest:a.clone(),request:n.clone()}),o}}async fetchAndCachePut(e){const t=await this.fetch(e),r=t.clone();return this.waitUntil(this.cachePut(e,r)),t}async cacheMatch(e){const t=D(e);let r;const{cacheName:a,matchOptions:n}=this._strategy,o=await this.getCacheKey(t,"read"),c=Object.assign(Object.assign({},n),{cacheName:a});r=await caches.match(o,c),r?i.debug(`Found a cached response in '${a}'.`):i.debug(`No cached response found in '${a}'.`);for(const u of this.iterateCallbacks("cachedResponseWillBeUsed"))r=await u({cacheName:a,matchOptions:n,cachedResponse:r,request:o,event:this.event})||void 0;return r}async cachePut(e,t){const r=D(e);await ne(0);const a=await this.getCacheKey(r,"write");{if(a.method&&a.method!=="GET")throw new l("attempt-to-cache-non-get-request",{url:d(a.url),method:a.method});const p=t.headers.get("Vary");p&&i.debug(`The response for ${d(a.url)} has a 'Vary: ${p}' header. Consider setting the {ignoreVary: true} option on your strategy to ensure cache matching and deletion works as expected.`)}if(!t)throw i.error(`Cannot cache non-existent response for '${d(a.url)}'.`),new l("cache-put-with-no-response",{url:d(a.url)});const n=await this._ensureResponseSafeToCache(t);if(!n)return i.debug(`Response '${d(a.url)}' will not be cached.`,n),!1;const{cacheName:o,matchOptions:c}=this._strategy,u=await self.caches.open(o),f=this.hasCallback("cacheDidUpdate"),b=f?await qe(u,a.clone(),["__WB_REVISION__"],c):null;i.debug(`Updating the '${o}' cache with a new Response for ${d(a.url)}.`);try{await u.put(a,f?n.clone():n)}catch(p){if(p instanceof Error)throw p.name==="QuotaExceededError"&&await Se(),p}for(const p of this.iterateCallbacks("cacheDidUpdate"))await p({cacheName:o,oldResponse:b,newResponse:n.clone(),request:a,event:this.event});return!0}async getCacheKey(e,t){const r=`${e.url} | ${t}`;if(!this._cacheKeys[r]){let a=e;for(const n of this.iterateCallbacks("cacheKeyWillBeUsed"))a=D(await n({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[r]=a}return this._cacheKeys[r]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const r of this.iterateCallbacks(e))await r(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if(typeof t[e]=="function"){const r=this._pluginStateMap.get(t);yield n=>{const o=Object.assign(Object.assign({},n),{state:r});return t[e](o)}}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,r=!1;for(const a of this.iterateCallbacks("cacheWillUpdate"))if(t=await a({request:this.request,response:t,event:this.event})||void 0,r=!0,!t)break;return r||(t&&t.status!==200&&(t=void 0),t&&t.status!==200&&(t.status===0?i.warn(`The response for '${this.request.url}' is an opaque response. The caching strategy that you're using will not cache opaque responses by default.`):i.debug(`The response for '${this.request.url}' returned a status code of '${e.status}' and won't be cached as a result.`))),t}}class U{constructor(e={}){this.cacheName=v.getRuntimeName(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,r=typeof e.request=="string"?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new ve(this,{event:t,request:r,params:a}),o=this._getResponse(n,r,t),c=this._awaitComplete(o,n,r,t);return[o,c]}async _getResponse(e,t,r){await e.runCallbacks("handlerWillStart",{event:r,request:t});let a;try{if(a=await this._handle(t,e),!a||a.type==="error")throw new l("no-response",{url:t.url})}catch(n){if(n instanceof Error){for(const o of e.iterateCallbacks("handlerDidError"))if(a=await o({error:n,event:r,request:t}),a)break}if(a)i.log(`While responding to '${d(t.url)}', an ${n instanceof Error?n.toString():""} error occurred. Using a fallback response provided by a handlerDidError plugin.`);else throw n}for(const n of e.iterateCallbacks("handlerWillRespond"))a=await n({event:r,request:t,response:a});return a}async _awaitComplete(e,t,r,a){let n,o;try{n=await e}catch{}try{await t.runCallbacks("handlerDidRespond",{event:a,request:r,response:n}),await t.doneWaiting()}catch(c){c instanceof Error&&(o=c)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:r,response:n,error:o}),t.destroy(),o)throw o}}const N={strategyStart:(s,e)=>`Using ${s} to respond to '${d(e.url)}'`,printFinalResponse:s=>{s&&(i.groupCollapsed("View the final response here."),i.log(s||"[No response returned]"),i.groupEnd())}},oe={cacheWillUpdate:async({response:s})=>s.status===200||s.status===0?s:null};class W extends U{constructor(e={}){super(e),this.plugins.some(t=>"cacheWillUpdate"in t)||this.plugins.unshift(oe),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0,this._networkTimeoutSeconds&&h.isType(this._networkTimeoutSeconds,"number",{moduleName:"workbox-strategies",className:this.constructor.name,funcName:"constructor",paramName:"networkTimeoutSeconds"})}async _handle(e,t){const r=[];h.isInstance(e,Request,{moduleName:"workbox-strategies",className:this.constructor.name,funcName:"handle",paramName:"makeRequest"});const a=[];let n;if(this._networkTimeoutSeconds){const{id:u,promise:f}=this._getTimeoutPromise({request:e,logs:r,handler:t});n=u,a.push(f)}const o=this._getNetworkPromise({timeoutId:n,request:e,logs:r,handler:t});a.push(o);const c=await t.waitUntil((async()=>await t.waitUntil(Promise.race(a))||await o)());{i.groupCollapsed(N.strategyStart(this.constructor.name,e));for(const u of r)i.log(u);N.printFinalResponse(c),i.groupEnd()}if(!c)throw new l("no-response",{url:e.url});return c}_getTimeoutPromise({request:e,logs:t,handler:r}){let a;return{promise:new Promise(o=>{a=setTimeout(async()=>{t.push(`Timing out the network response at ${this._networkTimeoutSeconds} seconds.`),o(await r.cacheMatch(e))},this._networkTimeoutSeconds*1e3)}),id:a}}async _getNetworkPromise({timeoutId:e,request:t,logs:r,handler:a}){let n,o;try{o=await a.fetchAndCachePut(t)}catch(c){c instanceof Error&&(n=c)}return e&&clearTimeout(e),o?r.push("Got response from network."):r.push("Unable to get a response from the network. Will respond with a cached response."),(n||!o)&&(o=await a.cacheMatch(t),o?r.push(`Found a cached response in the '${this.cacheName}' cache.`):r.push(`No response found in the '${this.cacheName}' cache.`)),o}}class ie extends U{constructor(e={}){super(e),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0}async _handle(e,t){h.isInstance(e,Request,{moduleName:"workbox-strategies",className:this.constructor.name,funcName:"_handle",paramName:"request"});let r,a;try{const n=[t.fetch(e)];if(this._networkTimeoutSeconds){const o=ne(this._networkTimeoutSeconds*1e3);n.push(o)}if(a=await Promise.race(n),!a)throw new Error(`Timed out the network response after ${this._networkTimeoutSeconds} seconds.`)}catch(n){n instanceof Error&&(r=n)}if(i.groupCollapsed(N.strategyStart(this.constructor.name,e)),a?i.log("Got response from network."):i.log("Unable to get a response from the network."),N.printFinalResponse(a),i.groupEnd(),!a)throw new l("no-response",{url:e.url,error:r});return a}}class Ue extends U{constructor(e={}){super(e),this.plugins.some(t=>"cacheWillUpdate"in t)||this.plugins.unshift(oe)}async _handle(e,t){const r=[];h.isInstance(e,Request,{moduleName:"workbox-strategies",className:this.constructor.name,funcName:"handle",paramName:"request"});const a=t.fetchAndCachePut(e).catch(()=>{});t.waitUntil(a);let n=await t.cacheMatch(e),o;if(n)r.push(`Found a cached response in the '${this.cacheName}' cache. Will update with the network response in the background.`);else{r.push(`No response found in the '${this.cacheName}' cache. Will wait for the network response.`);try{n=await a}catch(c){c instanceof Error&&(o=c)}}{i.groupCollapsed(N.strategyStart(this.constructor.name,e));for(const c of r)i.log(c);N.printFinalResponse(n),i.groupEnd()}if(!n)throw new l("no-response",{url:e.url,error:o});return n}}function J(s,e){const t=e();return s.waitUntil(t),t}try{self["workbox:precaching:6.5.3"]&&_()}catch{}const Pe="__WB_REVISION__";function Le(s){if(!s)throw new l("add-to-cache-list-unexpected-type",{entry:s});if(typeof s=="string"){const n=new URL(s,location.href);return{cacheKey:n.href,url:n.href}}const{revision:e,url:t}=s;if(!t)throw new l("add-to-cache-list-unexpected-type",{entry:s});if(!e){const n=new URL(t,location.href);return{cacheKey:n.href,url:n.href}}const r=new URL(t,location.href),a=new URL(t,location.href);return r.searchParams.set(Pe,e),{cacheKey:r.href,url:a.href}}class Ae{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:r})=>{if(e.type==="install"&&t&&t.originalRequest&&t.originalRequest instanceof Request){const a=t.originalRequest.url;r?this.notUpdatedURLs.push(a):this.updatedURLs.push(a)}return r}}}class Ie{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:t,params:r})=>{const a=(r==null?void 0:r.cacheKey)||this._precacheController.getCacheKeyForURL(t.url);return a?new Request(a,{headers:t.headers}):t},this._precacheController=e}}const Oe=(s,e)=>{i.groupCollapsed(s);for(const t of e)i.log(t);i.groupEnd()};function Me(s){const e=s.length;e>0&&(i.groupCollapsed(`During precaching cleanup, ${e} cached request${e===1?" was":"s were"} deleted.`),Oe("Deleted Cache Requests",s),i.groupEnd())}function Y(s,e){if(e.length!==0){i.groupCollapsed(s);for(const t of e)i.log(t);i.groupEnd()}}function Be(s,e){const t=s.length,r=e.length;if(t||r){let a=`Precaching ${t} file${t===1?"":"s"}.`;r>0&&(a+=` ${r} file${r===1?" is":"s are"} already cached.`),i.groupCollapsed(a),Y("View newly precached URLs.",s),Y("View previously precached URLs.",e),i.groupEnd()}}let C;function Ke(){if(C===void 0){const s=new Response("");if("body"in s)try{new Response(s.body),C=!0}catch{C=!1}C=!1}return C}async function Fe(s,e){let t=null;if(s.url&&(t=new URL(s.url).origin),t!==self.location.origin)throw new l("cross-origin-copy-response",{origin:t});const r=s.clone(),a={headers:new Headers(r.headers),status:r.status,statusText:r.statusText},n=e?e(a):a,o=Ke()?r.body:await r.blob();return new Response(o,n)}class R extends U{constructor(e={}){e.cacheName=v.getPrecacheName(e.cacheName),super(e),this._fallbackToNetwork=e.fallbackToNetwork!==!1,this.plugins.push(R.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const r=await t.cacheMatch(e);return r||(t.event&&t.event.type==="install"?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let r;const a=t.params||{};if(this._fallbackToNetwork){i.warn(`The precached response for ${d(e.url)} in ${this.cacheName} was not found. Falling back to the network.`);const n=a.integrity,o=e.integrity,c=!o||o===n;r=await t.fetch(new Request(e,{integrity:e.mode!=="no-cors"?o||n:void 0})),n&&c&&e.mode!=="no-cors"&&(this._useDefaultCacheabilityPluginIfNeeded(),await t.cachePut(e,r.clone())&&i.log(`A response for ${d(e.url)} was used to "repair" the precache.`))}else throw new l("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{const n=a.cacheKey||await t.getCacheKey(e,"read");i.groupCollapsed("Precaching is responding to: "+d(e.url)),i.log(`Serving the precached url: ${d(n instanceof Request?n.url:n)}`),i.groupCollapsed("View request details here."),i.log(e),i.groupEnd(),i.groupCollapsed("View response details here."),i.log(r),i.groupEnd(),i.groupEnd()}return r}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();const r=await t.fetch(e);if(!await t.cachePut(e,r.clone()))throw new l("bad-precaching-response",{url:e.url,status:r.status});return r}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[r,a]of this.plugins.entries())a!==R.copyRedirectedCacheableResponsesPlugin&&(a===R.defaultPrecacheCacheabilityPlugin&&(e=r),a.cacheWillUpdate&&t++);t===0?this.plugins.push(R.defaultPrecacheCacheabilityPlugin):t>1&&e!==null&&this.plugins.splice(e,1)}}R.defaultPrecacheCacheabilityPlugin={async cacheWillUpdate({response:s}){return!s||s.status>=400?null:s}};R.copyRedirectedCacheableResponsesPlugin={async cacheWillUpdate({response:s}){return s.redirected?await Fe(s):s}};class je{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:r=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new R({cacheName:v.getPrecacheName(e),plugins:[...t,new Ie({precacheController:this})],fallbackToNetwork:r}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){h.isArray(e,{moduleName:"workbox-precaching",className:"PrecacheController",funcName:"addToCacheList",paramName:"entries"});const t=[];for(const r of e){typeof r=="string"?t.push(r):r&&r.revision===void 0&&t.push(r.url);const{cacheKey:a,url:n}=Le(r),o=typeof r!="string"&&r.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==a)throw new l("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:a});if(typeof r!="string"&&r.integrity){if(this._cacheKeysToIntegrities.has(a)&&this._cacheKeysToIntegrities.get(a)!==r.integrity)throw new l("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(a,r.integrity)}if(this._urlsToCacheKeys.set(n,a),this._urlsToCacheModes.set(n,o),t.length>0){const c=`Workbox is precaching URLs without revision info: ${t.join(", ")}
This is generally NOT safe. Learn more at https://bit.ly/wb-precache`;i.warn(c)}}}install(e){return J(e,async()=>{const t=new Ae;this.strategy.plugins.push(t);for(const[n,o]of this._urlsToCacheKeys){const c=this._cacheKeysToIntegrities.get(o),u=this._urlsToCacheModes.get(n),f=new Request(n,{integrity:c,cache:u,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:o},request:f,event:e}))}const{updatedURLs:r,notUpdatedURLs:a}=t;return Be(r,a),{updatedURLs:r,notUpdatedURLs:a}})}activate(e){return J(e,async()=>{const t=await self.caches.open(this.strategy.cacheName),r=await t.keys(),a=new Set(this._urlsToCacheKeys.values()),n=[];for(const o of r)a.has(o.url)||(await t.delete(o),n.push(o.url));return Me(n),{deletedURLs:n}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,r=this.getCacheKeyForURL(t);if(r)return(await self.caches.open(this.strategy.cacheName)).match(r)}createHandlerBoundToURL(e){const t=this.getCacheKeyForURL(e);if(!t)throw new l("non-precached-url",{url:e});return r=>(r.request=new Request(e),r.params=Object.assign({cacheKey:t},r.params),this.strategy.handle(r))}}let L;const ce=()=>(L||(L=new je),L);function We(s,e=[]){for(const t of[...s.searchParams.keys()])e.some(r=>r.test(t))&&s.searchParams.delete(t);return s}function*He(s,{ignoreURLParametersMatching:e=[/^utm_/,/^fbclid$/],directoryIndex:t="index.html",cleanURLs:r=!0,urlManipulation:a}={}){const n=new URL(s,location.href);n.hash="",yield n.href;const o=We(n,e);if(yield o.href,t&&o.pathname.endsWith("/")){const c=new URL(o.href);c.pathname+=t,yield c.href}if(r){const c=new URL(o.href);c.pathname+=".html",yield c.href}if(a){const c=a({url:n});for(const u of c)yield u.href}}class Qe extends ${constructor(e,t){const r=({request:a})=>{const n=e.getURLsToCacheKeys();for(const o of He(a.url,t)){const c=n.get(o);if(c){const u=e.getIntegrityForCacheKey(c);return{cacheKey:c,integrity:u}}}i.debug("Precaching did not find a match for "+d(a.url))};super(r,e.strategy)}}function Ve(s){const e=ce(),t=new Qe(e,s);x(t)}function Ge(s){ce().precache(s)}function Je(s,e){Ge(s),Ve(e)}try{self["workbox:cacheable-response:6.5.3"]&&_()}catch{}class Ye{constructor(e={}){{if(!(e.statuses||e.headers))throw new l("statuses-or-headers-required",{moduleName:"workbox-cacheable-response",className:"CacheableResponse",funcName:"constructor"});e.statuses&&h.isArray(e.statuses,{moduleName:"workbox-cacheable-response",className:"CacheableResponse",funcName:"constructor",paramName:"config.statuses"}),e.headers&&h.isType(e.headers,"object",{moduleName:"workbox-cacheable-response",className:"CacheableResponse",funcName:"constructor",paramName:"config.headers"})}this._statuses=e.statuses,this._headers=e.headers}isResponseCacheable(e){h.isInstance(e,Response,{moduleName:"workbox-cacheable-response",className:"CacheableResponse",funcName:"isResponseCacheable",paramName:"response"});let t=!0;if(this._statuses&&(t=this._statuses.includes(e.status)),this._headers&&t&&(t=Object.keys(this._headers).some(r=>e.headers.get(r)===this._headers[r])),!t){i.groupCollapsed(`The request for '${d(e.url)}' returned a response that does not meet the criteria for being cached.`),i.groupCollapsed("View cacheability criteria here."),i.log("Cacheable statuses: "+JSON.stringify(this._statuses)),i.log("Cacheable headers: "+JSON.stringify(this._headers,null,2)),i.groupEnd();const r={};e.headers.forEach((a,n)=>{r[n]=a}),i.groupCollapsed("View response status and headers here."),i.log(`Response status: ${e.status}`),i.log("Response headers: "+JSON.stringify(r,null,2)),i.groupEnd(),i.groupCollapsed("View full response details here."),i.log(e.headers),i.log(e),i.groupEnd(),i.groupEnd()}return t}}class H{constructor(e){this.cacheWillUpdate=async({response:t})=>this._cacheableResponse.isResponseCacheable(t)?t:null,this._cacheableResponse=new Ye(e)}}function ue(s){s.then(()=>{})}const ze=(s,e)=>e.some(t=>s instanceof t);let z,X;function Xe(){return z||(z=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function Ze(){return X||(X=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}const he=new WeakMap,K=new WeakMap,le=new WeakMap,A=new WeakMap,Q=new WeakMap;function et(s){const e=new Promise((t,r)=>{const a=()=>{s.removeEventListener("success",n),s.removeEventListener("error",o)},n=()=>{t(y(s.result)),a()},o=()=>{r(s.error),a()};s.addEventListener("success",n),s.addEventListener("error",o)});return e.then(t=>{t instanceof IDBCursor&&he.set(t,s)}).catch(()=>{}),Q.set(e,s),e}function tt(s){if(K.has(s))return;const e=new Promise((t,r)=>{const a=()=>{s.removeEventListener("complete",n),s.removeEventListener("error",o),s.removeEventListener("abort",o)},n=()=>{t(),a()},o=()=>{r(s.error||new DOMException("AbortError","AbortError")),a()};s.addEventListener("complete",n),s.addEventListener("error",o),s.addEventListener("abort",o)});K.set(s,e)}let F={get(s,e,t){if(s instanceof IDBTransaction){if(e==="done")return K.get(s);if(e==="objectStoreNames")return s.objectStoreNames||le.get(s);if(e==="store")return t.objectStoreNames[1]?void 0:t.objectStore(t.objectStoreNames[0])}return y(s[e])},set(s,e,t){return s[e]=t,!0},has(s,e){return s instanceof IDBTransaction&&(e==="done"||e==="store")?!0:e in s}};function st(s){F=s(F)}function rt(s){return s===IDBDatabase.prototype.transaction&&!("objectStoreNames"in IDBTransaction.prototype)?function(e,...t){const r=s.call(I(this),e,...t);return le.set(r,e.sort?e.sort():[e]),y(r)}:Ze().includes(s)?function(...e){return s.apply(I(this),e),y(he.get(this))}:function(...e){return y(s.apply(I(this),e))}}function at(s){return typeof s=="function"?rt(s):(s instanceof IDBTransaction&&tt(s),ze(s,Xe())?new Proxy(s,F):s)}function y(s){if(s instanceof IDBRequest)return et(s);if(A.has(s))return A.get(s);const e=at(s);return e!==s&&(A.set(s,e),Q.set(e,s)),e}const I=s=>Q.get(s);function de(s,e,{blocked:t,upgrade:r,blocking:a,terminated:n}={}){const o=indexedDB.open(s,e),c=y(o);return r&&o.addEventListener("upgradeneeded",u=>{r(y(o.result),u.oldVersion,u.newVersion,y(o.transaction),u)}),t&&o.addEventListener("blocked",u=>t(u.oldVersion,u.newVersion,u)),c.then(u=>{n&&u.addEventListener("close",()=>n()),a&&u.addEventListener("versionchange",f=>a(f.oldVersion,f.newVersion,f))}).catch(()=>{}),c}function nt(s,{blocked:e}={}){const t=indexedDB.deleteDatabase(s);return e&&t.addEventListener("blocked",r=>e(r.oldVersion,r)),y(t).then(()=>{})}const ot=["get","getKey","getAll","getAllKeys","count"],it=["put","add","delete","clear"],O=new Map;function Z(s,e){if(!(s instanceof IDBDatabase&&!(e in s)&&typeof e=="string"))return;if(O.get(e))return O.get(e);const t=e.replace(/FromIndex$/,""),r=e!==t,a=it.includes(t);if(!(t in(r?IDBIndex:IDBObjectStore).prototype)||!(a||ot.includes(t)))return;const n=async function(o,...c){const u=this.transaction(o,a?"readwrite":"readonly");let f=u.store;return r&&(f=f.index(c.shift())),(await Promise.all([f[t](...c),a&&u.done]))[0]};return O.set(e,n),n}st(s=>({...s,get:(e,t,r)=>Z(e,t)||s.get(e,t,r),has:(e,t)=>!!Z(e,t)||s.has(e,t)}));try{self["workbox:expiration:6.5.3"]&&_()}catch{}const ct="workbox-expiration",k="cache-entries",ee=s=>{const e=new URL(s,location.href);return e.hash="",e.href};class ut{constructor(e){this._db=null,this._cacheName=e}_upgradeDb(e){const t=e.createObjectStore(k,{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1})}_upgradeDbAndDeleteOldDbs(e){this._upgradeDb(e),this._cacheName&&nt(this._cacheName)}async setTimestamp(e,t){e=ee(e);const r={url:e,timestamp:t,cacheName:this._cacheName,id:this._getId(e)},n=(await this.getDb()).transaction(k,"readwrite",{durability:"relaxed"});await n.store.put(r),await n.done}async getTimestamp(e){const r=await(await this.getDb()).get(k,this._getId(e));return r==null?void 0:r.timestamp}async expireEntries(e,t){const r=await this.getDb();let a=await r.transaction(k).store.index("timestamp").openCursor(null,"prev");const n=[];let o=0;for(;a;){const u=a.value;u.cacheName===this._cacheName&&(e&&u.timestamp<e||t&&o>=t?n.push(a.value):o++),a=await a.continue()}const c=[];for(const u of n)await r.delete(k,u.id),c.push(u.url);return c}_getId(e){return this._cacheName+"|"+ee(e)}async getDb(){return this._db||(this._db=await de(ct,1,{upgrade:this._upgradeDbAndDeleteOldDbs.bind(this)})),this._db}}class ht{constructor(e,t={}){this._isRunning=!1,this._rerunRequested=!1;{if(h.isType(e,"string",{moduleName:"workbox-expiration",className:"CacheExpiration",funcName:"constructor",paramName:"cacheName"}),!(t.maxEntries||t.maxAgeSeconds))throw new l("max-entries-or-age-required",{moduleName:"workbox-expiration",className:"CacheExpiration",funcName:"constructor"});t.maxEntries&&h.isType(t.maxEntries,"number",{moduleName:"workbox-expiration",className:"CacheExpiration",funcName:"constructor",paramName:"config.maxEntries"}),t.maxAgeSeconds&&h.isType(t.maxAgeSeconds,"number",{moduleName:"workbox-expiration",className:"CacheExpiration",funcName:"constructor",paramName:"config.maxAgeSeconds"})}this._maxEntries=t.maxEntries,this._maxAgeSeconds=t.maxAgeSeconds,this._matchOptions=t.matchOptions,this._cacheName=e,this._timestampModel=new ut(e)}async expireEntries(){if(this._isRunning){this._rerunRequested=!0;return}this._isRunning=!0;const e=this._maxAgeSeconds?Date.now()-this._maxAgeSeconds*1e3:0,t=await this._timestampModel.expireEntries(e,this._maxEntries),r=await self.caches.open(this._cacheName);for(const a of t)await r.delete(a,this._matchOptions);t.length>0?(i.groupCollapsed(`Expired ${t.length} ${t.length===1?"entry":"entries"} and removed ${t.length===1?"it":"them"} from the '${this._cacheName}' cache.`),i.log(`Expired the following ${t.length===1?"URL":"URLs"}:`),t.forEach(a=>i.log(`    ${a}`)),i.groupEnd()):i.debug("Cache expiration ran and found no entries to remove."),this._isRunning=!1,this._rerunRequested&&(this._rerunRequested=!1,ue(this.expireEntries()))}async updateTimestamp(e){h.isType(e,"string",{moduleName:"workbox-expiration",className:"CacheExpiration",funcName:"updateTimestamp",paramName:"url"}),await this._timestampModel.setTimestamp(e,Date.now())}async isURLExpired(e){if(this._maxAgeSeconds){const t=await this._timestampModel.getTimestamp(e),r=Date.now()-this._maxAgeSeconds*1e3;return t!==void 0?t<r:!0}else throw new l("expired-test-without-max-age",{methodName:"isURLExpired",paramName:"maxAgeSeconds"})}async delete(){this._rerunRequested=!1,await this._timestampModel.expireEntries(1/0)}}function lt(s){h.isType(s,"function",{moduleName:"workbox-core",funcName:"register",paramName:"callback"}),B.add(s),i.log("Registered a callback to respond to quota errors.",s)}class fe{constructor(e={}){this.cachedResponseWillBeUsed=async({event:t,request:r,cacheName:a,cachedResponse:n})=>{if(!n)return null;const o=this._isResponseDateFresh(n),c=this._getCacheExpiration(a);ue(c.expireEntries());const u=c.updateTimestamp(r.url);if(t)try{t.waitUntil(u)}catch{"request"in t&&i.warn(`Unable to ensure service worker stays alive when updating cache entry for '${d(t.request.url)}'.`)}return o?n:null},this.cacheDidUpdate=async({cacheName:t,request:r})=>{h.isType(t,"string",{moduleName:"workbox-expiration",className:"Plugin",funcName:"cacheDidUpdate",paramName:"cacheName"}),h.isInstance(r,Request,{moduleName:"workbox-expiration",className:"Plugin",funcName:"cacheDidUpdate",paramName:"request"});const a=this._getCacheExpiration(t);await a.updateTimestamp(r.url),await a.expireEntries()};{if(!(e.maxEntries||e.maxAgeSeconds))throw new l("max-entries-or-age-required",{moduleName:"workbox-expiration",className:"Plugin",funcName:"constructor"});e.maxEntries&&h.isType(e.maxEntries,"number",{moduleName:"workbox-expiration",className:"Plugin",funcName:"constructor",paramName:"config.maxEntries"}),e.maxAgeSeconds&&h.isType(e.maxAgeSeconds,"number",{moduleName:"workbox-expiration",className:"Plugin",funcName:"constructor",paramName:"config.maxAgeSeconds"})}this._config=e,this._maxAgeSeconds=e.maxAgeSeconds,this._cacheExpirations=new Map,e.purgeOnQuotaError&&lt(()=>this.deleteCacheAndMetadata())}_getCacheExpiration(e){if(e===v.getRuntimeName())throw new l("expire-custom-caches-only");let t=this._cacheExpirations.get(e);return t||(t=new ht(e,this._config),this._cacheExpirations.set(e,t)),t}_isResponseDateFresh(e){if(!this._maxAgeSeconds)return!0;const t=this._getDateHeaderTimestamp(e);if(t===null)return!0;const r=Date.now();return t>=r-this._maxAgeSeconds*1e3}_getDateHeaderTimestamp(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),a=new Date(t).getTime();return isNaN(a)?null:a}async deleteCacheAndMetadata(){for(const[e,t]of this._cacheExpirations)await self.caches.delete(e),await t.delete();this._cacheExpirations=new Map}}x(({request:s})=>s.mode==="navigate",new W({cacheName:"pages-cache",plugins:[new H({statuses:[200]})]}),"GET");x(({url:s})=>s.pathname==="/categories",new Ue({cacheName:"categories-cache",plugins:[new fe({maxEntries:500,maxAgeSeconds:30,purgeOnQuotaError:!0}),new H({statuses:[200]})]}));x(({url:s})=>s.pathname==="/news",new W({cacheName:"data-cache",matchOptions:{ignoreSearch:!0,ignoreVary:!0},plugins:[new fe({maxEntries:500,maxAgeSeconds:30,purgeOnQuotaError:!0}),new H({statuses:[0,200]})]}));const dt="/offline-fallback.html";Te(new ie);ke(({event:s})=>{switch(s.request.destination){case"document":return console.log("im hereeee"),caches.match(dt);default:throw console.log(s.request.destination,"im heree default error"),new Error("hohohohohoo")}});try{self["workbox:background-sync:6.5.3"]&&_()}catch{}const te=3,ft="workbox-background-sync",g="requests",T="queueName";class pt{constructor(){this._db=null}async addEntry(e){const r=(await this.getDb()).transaction(g,"readwrite",{durability:"relaxed"});await r.store.add(e),await r.done}async getFirstEntryId(){const t=await(await this.getDb()).transaction(g).store.openCursor();return t==null?void 0:t.value.id}async getAllEntriesByQueueName(e){const r=await(await this.getDb()).getAllFromIndex(g,T,IDBKeyRange.only(e));return r||new Array}async getEntryCountByQueueName(e){return(await this.getDb()).countFromIndex(g,T,IDBKeyRange.only(e))}async deleteEntry(e){await(await this.getDb()).delete(g,e)}async getFirstEntryByQueueName(e){return await this.getEndEntryFromIndex(IDBKeyRange.only(e),"next")}async getLastEntryByQueueName(e){return await this.getEndEntryFromIndex(IDBKeyRange.only(e),"prev")}async getEndEntryFromIndex(e,t){const a=await(await this.getDb()).transaction(g).store.index(T).openCursor(e,t);return a==null?void 0:a.value}async getDb(){return this._db||(this._db=await de(ft,te,{upgrade:this._upgradeDb})),this._db}_upgradeDb(e,t){t>0&&t<te&&e.objectStoreNames.contains(g)&&e.deleteObjectStore(g),e.createObjectStore(g,{autoIncrement:!0,keyPath:"id"}).createIndex(T,T,{unique:!1})}}class mt{constructor(e){this._queueName=e,this._queueDb=new pt}async pushEntry(e){h.isType(e,"object",{moduleName:"workbox-background-sync",className:"QueueStore",funcName:"pushEntry",paramName:"entry"}),h.isType(e.requestData,"object",{moduleName:"workbox-background-sync",className:"QueueStore",funcName:"pushEntry",paramName:"entry.requestData"}),delete e.id,e.queueName=this._queueName,await this._queueDb.addEntry(e)}async unshiftEntry(e){h.isType(e,"object",{moduleName:"workbox-background-sync",className:"QueueStore",funcName:"unshiftEntry",paramName:"entry"}),h.isType(e.requestData,"object",{moduleName:"workbox-background-sync",className:"QueueStore",funcName:"unshiftEntry",paramName:"entry.requestData"});const t=await this._queueDb.getFirstEntryId();t?e.id=t-1:delete e.id,e.queueName=this._queueName,await this._queueDb.addEntry(e)}async popEntry(){return this._removeEntry(await this._queueDb.getLastEntryByQueueName(this._queueName))}async shiftEntry(){return this._removeEntry(await this._queueDb.getFirstEntryByQueueName(this._queueName))}async getAll(){return await this._queueDb.getAllEntriesByQueueName(this._queueName)}async size(){return await this._queueDb.getEntryCountByQueueName(this._queueName)}async deleteEntry(e){await this._queueDb.deleteEntry(e)}async _removeEntry(e){return e&&await this.deleteEntry(e.id),e}}const gt=["method","referrer","referrerPolicy","mode","credentials","cache","redirect","integrity","keepalive"];class q{constructor(e){h.isType(e,"object",{moduleName:"workbox-background-sync",className:"StorableRequest",funcName:"constructor",paramName:"requestData"}),h.isType(e.url,"string",{moduleName:"workbox-background-sync",className:"StorableRequest",funcName:"constructor",paramName:"requestData.url"}),e.mode==="navigate"&&(e.mode="same-origin"),this._requestData=e}static async fromRequest(e){const t={url:e.url,headers:{}};e.method!=="GET"&&(t.body=await e.clone().arrayBuffer());for(const[r,a]of e.headers.entries())t.headers[r]=a;for(const r of gt)e[r]!==void 0&&(t[r]=e[r]);return new q(t)}toObject(){const e=Object.assign({},this._requestData);return e.headers=Object.assign({},this._requestData.headers),e.body&&(e.body=e.body.slice(0)),e}toRequest(){return new Request(this._requestData.url,this._requestData)}clone(){return new q(this.toObject())}}const se="workbox-background-sync",wt=60*24*7,M=new Set,re=s=>{const e={request:new q(s.requestData).toRequest(),timestamp:s.timestamp};return s.metadata&&(e.metadata=s.metadata),e};class yt{constructor(e,{forceSyncFallback:t,onSync:r,maxRetentionTime:a}={}){if(this._syncInProgress=!1,this._requestsAddedDuringSync=!1,M.has(e))throw new l("duplicate-queue-name",{name:e});M.add(e),this._name=e,this._onSync=r||this.replayRequests,this._maxRetentionTime=a||wt,this._forceSyncFallback=Boolean(t),this._queueStore=new mt(this._name),this._addSyncListener()}get name(){return this._name}async pushRequest(e){h.isType(e,"object",{moduleName:"workbox-background-sync",className:"Queue",funcName:"pushRequest",paramName:"entry"}),h.isInstance(e.request,Request,{moduleName:"workbox-background-sync",className:"Queue",funcName:"pushRequest",paramName:"entry.request"}),await this._addRequest(e,"push")}async unshiftRequest(e){h.isType(e,"object",{moduleName:"workbox-background-sync",className:"Queue",funcName:"unshiftRequest",paramName:"entry"}),h.isInstance(e.request,Request,{moduleName:"workbox-background-sync",className:"Queue",funcName:"unshiftRequest",paramName:"entry.request"}),await this._addRequest(e,"unshift")}async popRequest(){return this._removeRequest("pop")}async shiftRequest(){return this._removeRequest("shift")}async getAll(){const e=await this._queueStore.getAll(),t=Date.now(),r=[];for(const a of e){const n=this._maxRetentionTime*60*1e3;t-a.timestamp>n?await this._queueStore.deleteEntry(a.id):r.push(re(a))}return r}async size(){return await this._queueStore.size()}async _addRequest({request:e,metadata:t,timestamp:r=Date.now()},a){const o={requestData:(await q.fromRequest(e.clone())).toObject(),timestamp:r};switch(t&&(o.metadata=t),a){case"push":await this._queueStore.pushEntry(o);break;case"unshift":await this._queueStore.unshiftEntry(o);break}i.log(`Request for '${d(e.url)}' has been added to background sync queue '${this._name}'.`),this._syncInProgress?this._requestsAddedDuringSync=!0:await this.registerSync()}async _removeRequest(e){const t=Date.now();let r;switch(e){case"pop":r=await this._queueStore.popEntry();break;case"shift":r=await this._queueStore.shiftEntry();break}if(r){const a=this._maxRetentionTime*60*1e3;return t-r.timestamp>a?this._removeRequest(e):re(r)}else return}async replayRequests(){let e;for(;e=await this.shiftRequest();)try{await fetch(e.request.clone()),i.log(`Request for '${d(e.request.url)}' has been replayed in queue '${this._name}'`)}catch{throw await this.unshiftRequest(e),i.log(`Request for '${d(e.request.url)}' failed to replay, putting it back in queue '${this._name}'`),new l("queue-replay-failed",{name:this._name})}i.log(`All requests in queue '${this.name}' have successfully replayed; the queue is now empty!`)}async registerSync(){if("sync"in self.registration&&!this._forceSyncFallback)try{await self.registration.sync.register(`${se}:${this._name}`)}catch(e){i.warn(`Unable to register sync event for '${this._name}'.`,e)}}_addSyncListener(){"sync"in self.registration&&!this._forceSyncFallback?self.addEventListener("sync",e=>{if(e.tag===`${se}:${this._name}`){i.log(`Background sync for tag '${e.tag}' has been received`);const t=async()=>{this._syncInProgress=!0;let r;try{await this._onSync({queue:this})}catch(a){if(a instanceof Error)throw r=a,r}finally{this._requestsAddedDuringSync&&!(r&&!e.lastChance)&&await this.registerSync(),this._syncInProgress=!1,this._requestsAddedDuringSync=!1}};e.waitUntil(t())}}):(i.log("Background sync replaying without background sync event"),this._onSync({queue:this}))}static get _queueNames(){return M}}class bt{constructor(e,t){this.fetchDidFail=async({request:r})=>{await this._queue.pushRequest({request:r})},this._queue=new yt(e,t)}}const _t=async(s,e)=>{try{self.registration.showNotification(s,{body:e,icon:"../images/icons/icon-192x192.png",vibrate:[200,100,200,100,200,100,200],tag:"vibration-sample"})}catch(t){console.log("show notification was failure",t)}},Rt=async(s,e)=>new Promise(t=>{const r=new MessageChannel;r.port1.onmessage=a=>{a.data.error?t(a.data.error):t(a.data)},s.postMessage(e,[r.port2])}),Nt=async s=>(await clients.matchAll()).find(r=>r.id===s),xt={fetchDidSucceed:({response:s})=>{if(s.statusCode>=500)throw new Error("no internet connection");return s},fetchDidFail:async s=>{console.log("makan malam"),console.log(s),console.log(s.event.clientId);const e=Nt(s.event.clientId);Rt(e,"data will be post when internet availble")}};x(({url:s})=>s.pathname=="/add-news",new ie({cacheName:"data-cache",plugins:[xt,new bt("myQueueNames",{maxRetentionTime:.1*60,onSync:async({queue:s})=>{let e;for(;e=await s.shiftRequest();)try{await fetch(e.request),_t("woh. your post has been sync ")}catch(t){throw await(void 0).unshiftRequest(e),t}}})]}),"POST");const Et=["/offline-fallback.html","/images/icons/icon-72x72.png","/images/icons/icon-96x96.png","/images/icons/icon-128x128.png","/images/icons/icon-144x144.png","/images/icons/icon-152x152.png","/images/icons/icon-192x192.png","/images/icons/icon-384x384.png","/images/icons/icon-512x512.png"];self.addEventListener("install",s=>{const e="MyFancyCacheName_v2";s.waitUntil(caches.open(e).then(t=>t.addAll(Et))),console.log("Service worker installed")});self.addEventListener("activate",s=>{console.log("Service worker activated")});x(new RegExp("https://jsonplaceholder.typicode.com/users"),new W);Je([{"revision":null,"url":"build/assets/_commonjsHelpers-725317a4.js"},{"revision":null,"url":"build/assets/app-81594db1.css"},{"revision":null,"url":"build/assets/app-8b3e580e.js"},{"revision":null,"url":"build/assets/custom-scanner-23a5d489.js"},{"revision":null,"url":"build/assets/html5-qrcode-scanner-5881c3c7.js"},{"revision":null,"url":"build/assets/scanner-d614b39a.js"},{"revision":"925b54cf347222c6010420212cc2b399","url":"offline-fallback.html"},{"revision":"bb9752cb511ca09a5d7d4f2458d94fa0","url":"../webmanifest.json"}]);
